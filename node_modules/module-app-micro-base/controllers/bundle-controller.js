

/*************************************************************************
 *
 * COMPRO CONFIDENTIAL
 * __________________
 *
 *  [2015] - [2020] Compro Technologies Private Limited
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Compro Technologies Private Limited. The
 * intellectual and technical concepts contained herein are
 * proprietary to Compro Technologies Private Limited and may
 * be covered by U.S. and Foreign Patents, patents in process,
 * and are protected by trade secret or copyright law.
 *
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Compro Technologies Pvt. Ltd..
 ***************************************************************************/


/**********************************************************************
 * Provides functions for accessing PEAS api
 ***********************************************************************/
'use strict';

/************************************
* Internal npm Modules
************************************/
const bundleService = require('./../services/bundle-service');
//app config
/************************************
* External npm Modules
************************************/
/************************************
* Global Variables
************************************/


/************************************
* Module exports / Public functions
************************************/
exports.getBundle = getBundle;
exports.getBundleById = getBundleById;
exports.createBundle = createBundle;
exports.updateBundle = updateBundle;
exports.deleteBundle = deleteBundle;

/************************************
* Public function definitions
************************************/
/*
Get Bundles for a user
*/
function getBundle(formOptions, options) {
    return bundleService.getBundles(formOptions, options);
}

function getBundleById(bundleId, options) {
    return bundleService.getBundleById(bundleId, options);
}

function createBundle(formOptions, options) {
    return bundleService.createBundle(formOptions, options);
}

function updateBundle(formOptions, options) {
    return bundleService.updateBundle(formOptions, options);
}

function deleteBundle(deleteOptions) {
    return bundleService.deleteBundle(deleteOptions);
}




/************************************
* Private function/variable definitions
************************************/
