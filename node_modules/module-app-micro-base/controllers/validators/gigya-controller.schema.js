const { ajv } = require("./ajv")

const addInstituteDataForUserSchema = {
    type: "object",
    properties: {
        uid: { type: "string" },
        institutes: {
            type: "array",
            items:{
               "type": "object",
                "properties": {
                    role: { type: "string" },
                    spaceKey: { type: "string" },
                    name: { type: "string" }
                },
                required: ["role", "spaceKey", "name"],
                additionalProperties: true
            }
        }
    },
    required: ["uid", "institutes"],
    additionalProperties: true
}

const updateInstituteDataForAdminSchema = {
    type: "object",
    properties: {
        uid: { type: "string" },
        action: {
            type: "string",
            enum: ['promote', 'demote']
        },
        institute: {
            type: "object",
            properties:{
                spaceKey: { type: "string" },
                name: { type: "string" },
                oid: { type : "string"}
            },
            required: ["name"],
            additionalProperties: true,
            anyOf: [
                {"required": ["spaceKey"], "not":{"required":["oid"]} },
                {"required": ["oid"], "not":{"required":["spaceKey"]} }
            ]
        }
    },
    required: ["uid", "institute", "action"],
    additionalProperties: true
}

const setRequirePasswordChangeSchema = {
    type: "object",
    properties: {
        uid: { type: "string" },
        isPasswordReset: {type: "boolean"}
    },
    required: ["uid", "isPasswordReset"],
    additionalProperties: true
}

const registerUserSchema = {
    type: "object",
    properties: {
        email: { type: "string"},
        role: { type: "string" },
        regSource: { type: "string" },
        profile: {
            type: "object",
            properties: {
                firstName: { type: "string" },
                lastName: { type: "string" },
                email: { type: "string" },
                country: { type: "string" }
            },
            required: ["firstName", "lastName", "email", "country"]
        },
    },
    required: ["email", "role"]

}

const deleteInstituteDataForUserSchema = {
    type: "object",
    properties: {
        uid: { type: "string" },
        institutes: {
            type: "array",
            items:{
               "type": "object",
                "properties": {
                    spaceKey: { type: "string" },
                },
                required: ["spaceKey"],
                additionalProperties: true
            }
        }
    },
    required: ["uid", "institutes"],
    additionalProperties: true
}

module.exports = {
    addInstituteDataForUser: ajv.compile(addInstituteDataForUserSchema),
    updateInstituteDataForAdmin: ajv.compile(updateInstituteDataForAdminSchema),
    setRequirePasswordChangeSchema: ajv.compile(setRequirePasswordChangeSchema),
    registerUser: ajv.compile(registerUserSchema),
    deleteInstituteDataForUserSchema: ajv.compile(deleteInstituteDataForUserSchema)
}